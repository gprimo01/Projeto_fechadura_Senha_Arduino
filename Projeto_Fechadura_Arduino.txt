#include <Wire.h>
#include <Keypad.h>
#include <LiquidCrystal_I2C.h>
#define Password_Length 8 
int signalPin = 12;

LiquidCrystal_I2C lcd(0x27, 16, 2); // define informacoes do lcd como o endereço I2C (0x27) e tamanho do mesmo

char Data[Password_Length]; 
char Master[Password_Length] = "123A456"; 
byte data_count = 0, master_count = 0;
bool Pass_is_good;
char customKey;
const byte ROWS = 4;
const byte COLS = 4;
char hexaKeys[ROWS][COLS] = {
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};
byte rowPins[ROWS] = {9, 8, 7, 6};
byte colPins[COLS] = {5, 4, 3, 2};
Keypad customKeypad = Keypad(makeKeymap(hexaKeys), rowPins, colPins, ROWS, COLS);

void setup(){
 lcd.begin(16,2);
 lcd.init();                 // Inicializando o LCD
 lcd.backlight();            // Ligando o BackLight do LCD
  pinMode(signalPin, OUTPUT);
  lcd.setCursor(1,0);
  lcd.print ("Insira a Senha");
  delay(500);

}
void loop(){
  customKey = customKeypad.getKey();
  if (customKey){
    Data[data_count] = customKey;  
        data_count++; 
        }
  if(data_count == Password_Length-1){
    if(!strcmp(Data, Master)){
      digitalWrite(signalPin, HIGH); 
      delay(5000);
      digitalWrite(signalPin, LOW);
      }
    else{
           delay(1000);
           }  
        clearData();  
  }
}
void clearData(){
  while(data_count !=0){
    Data[data_count--] = 0; 
  }
  return;
}

void setLocked (int locked){
  if (locked){
    digitalWrite(ledvermelho, HIGH);
    digitalWrite(ledverde, LOW);
    servo_Motor.write(0); 
    lcd.print ("ACESSO NEGADO");
    lcd.clear();
    delay (500);
  } 
  else{
    digitalWrite(ledvermelho, LOW);
    digitalWrite(ledverde, HIGH);
    servo_Motor.write(82);
    }
}
